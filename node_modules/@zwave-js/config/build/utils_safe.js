"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryParseCCId = exports.throwInvalidConfig = exports.hexKeyRegex2Digits = exports.hexKeyRegex4Digits = exports.hexKeyRegexNDigits = void 0;
const safe_1 = require("@zwave-js/core/safe");
exports.hexKeyRegexNDigits = /^0x[a-f0-9]+$/;
exports.hexKeyRegex4Digits = /^0x[a-f0-9]{4}$/;
exports.hexKeyRegex2Digits = /^0x[a-f0-9]{2}$/;
function throwInvalidConfig(which, reason) {
    throw new safe_1.ZWaveError(`The ${which ? which + " " : ""}config file is malformed!`
        + (reason ? `\n${reason}` : ""), safe_1.ZWaveErrorCodes.Config_Invalid);
}
exports.throwInvalidConfig = throwInvalidConfig;
function tryParseCCId(from) {
    let ccId;
    if (/^\d+$/.test(from)) {
        // Decimal CC ID
        ccId = parseInt(from, 10);
    }
    else if (exports.hexKeyRegexNDigits.test(from)) {
        // Hexadecimal CC ID
        ccId = parseInt(from.slice(2), 16);
    }
    else if (from in safe_1.CommandClasses) {
        // CC name
        return safe_1.CommandClasses[from];
    }
    if (ccId != undefined && ccId in safe_1.CommandClasses) {
        // This is a valid CC ID
        return ccId;
    }
}
exports.tryParseCCId = tryParseCCId;
//# sourceMappingURL=utils_safe.js.map