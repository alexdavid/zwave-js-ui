"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ControllerCommand = void 0;
var ControllerCommand;
(function (ControllerCommand) {
    ControllerCommand["beginInclusion"] = "controller.begin_inclusion";
    ControllerCommand["stopInclusion"] = "controller.stop_inclusion";
    ControllerCommand["beginExclusion"] = "controller.begin_exclusion";
    ControllerCommand["stopExclusion"] = "controller.stop_exclusion";
    ControllerCommand["removeFailedNode"] = "controller.remove_failed_node";
    ControllerCommand["replaceFailedNode"] = "controller.replace_failed_node";
    // Schema version <= 31
    ControllerCommand["healNode"] = "controller.heal_node";
    // Schema version >= 32
    ControllerCommand["rebuildNodeRoutes"] = "controller.rebuild_node_routes";
    // Schema version <= 31
    ControllerCommand["beginHealingNetwork"] = "controller.begin_healing_network";
    // Schema version >= 32
    ControllerCommand["beginRebuildingRoutes"] = "controller.begin_rebuilding_routes";
    // Schema version <= 31
    ControllerCommand["stopHealingNetwork"] = "controller.stop_healing_network";
    // Schema version >= 32
    ControllerCommand["stopRebuildingRoutes"] = "controller.stop_rebuilding_routes";
    ControllerCommand["isFailedNode"] = "controller.is_failed_node";
    ControllerCommand["getAssociationGroups"] = "controller.get_association_groups";
    ControllerCommand["getAssociations"] = "controller.get_associations";
    ControllerCommand["isAssociationAllowed"] = "controller.is_association_allowed";
    ControllerCommand["addAssociations"] = "controller.add_associations";
    ControllerCommand["removeAssociations"] = "controller.remove_associations";
    // Schema version < 3
    ControllerCommand["removeNodeFromAllAssocations"] = "controller.remove_node_from_all_assocations";
    // Schema version > 2
    ControllerCommand["removeNodeFromAllAssociations"] = "controller.remove_node_from_all_associations";
    ControllerCommand["getNodeNeighbors"] = "controller.get_node_neighbors";
    ControllerCommand["grantSecurityClasses"] = "controller.grant_security_classes";
    ControllerCommand["validateDSKAndEnterPIN"] = "controller.validate_dsk_and_enter_pin";
    ControllerCommand["provisionSmartStartNode"] = "controller.provision_smart_start_node";
    ControllerCommand["unprovisionSmartStartNode"] = "controller.unprovision_smart_start_node";
    ControllerCommand["getProvisioningEntry"] = "controller.get_provisioning_entry";
    ControllerCommand["getProvisioningEntries"] = "controller.get_provisioning_entries";
    ControllerCommand["supportsFeature"] = "controller.supports_feature";
    ControllerCommand["backupNVMRaw"] = "controller.backup_nvm_raw";
    ControllerCommand["restoreNVM"] = "controller.restore_nvm";
    ControllerCommand["setRFRegion"] = "controller.set_rf_region";
    ControllerCommand["getRFRegion"] = "controller.get_rf_region";
    ControllerCommand["setPowerlevel"] = "controller.set_powerlevel";
    ControllerCommand["getPowerlevel"] = "controller.get_powerlevel";
    ControllerCommand["getState"] = "controller.get_state";
    ControllerCommand["getKnownLifelineRoutes"] = "controller.get_known_lifeline_routes";
    ControllerCommand["getAnyFirmwareUpdateProgress"] = "controller.get_any_firmware_update_progress";
    ControllerCommand["isAnyOTAFirmwareUpdateInProgress"] = "controller.is_any_ota_firmware_update_in_progress";
    ControllerCommand["getAvailableFirmwareUpdates"] = "controller.get_available_firmware_updates";
    ControllerCommand["beginOTAFirmwareUpdate"] = "controller.begin_ota_firmware_update";
    ControllerCommand["firmwareUpdateOTA"] = "controller.firmware_update_ota";
    ControllerCommand["firmwareUpdateOTW"] = "controller.firmware_update_otw";
    ControllerCommand["isFirmwareUpdateInProgress"] = "controller.is_firmware_update_in_progress";
})(ControllerCommand || (exports.ControllerCommand = ControllerCommand = {}));
