import { ControllerFirmwareUpdateResult, Endpoint, FirmwareUpdateResult, SetValueResult, ZWaveNode } from "zwave-js";
import { SupervisionResult } from "@zwave-js/core";
import { IncomingCommandNodeSetRawConfigParameterValue } from "./node/incoming_message";
import { IncomingCommandEndpointSetRawConfigParameterValue } from "./endpoint/incoming_message";
export type SetValueResultType = {
    result: SetValueResult;
} | {
    success: boolean;
};
export declare function setValueOutgoingMessage(result: SetValueResult, schemaVersion: number): SetValueResultType;
export type FirmwareUpdateResultType = {
    result: ControllerFirmwareUpdateResult | FirmwareUpdateResult;
} | {
    success: boolean;
};
export declare function firmwareUpdateOutgoingMessage<T extends ControllerFirmwareUpdateResult | FirmwareUpdateResult>(result: T, schemaVersion: number): {
    result: T;
} | {
    success: boolean;
};
export declare function setRawConfigParameterValue(message: IncomingCommandNodeSetRawConfigParameterValue | IncomingCommandEndpointSetRawConfigParameterValue, nodeOrEndpoint: ZWaveNode | Endpoint): Promise<{
    result?: SupervisionResult;
}>;
