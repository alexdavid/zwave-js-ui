import { MockController, type MockControllerBehavior, type MockControllerOptions, MockNode, type MockNodeBehavior, type MockNodeOptions } from "@zwave-js/testing";
export type MockServerControllerOptions = Pick<MockControllerOptions, "ownNodeId" | "homeId" | "capabilities"> & {
    behaviors?: MockControllerBehavior[];
};
export type MockServerNodeOptions = Pick<MockNodeOptions, "id" | "capabilities"> & {
    behaviors?: MockNodeBehavior[];
};
export type MockServerInitHook = (controller: MockController, nodes: MockNode[]) => void;
export interface MockServerOptions {
    interface?: string;
    port?: number;
    config?: {
        controller?: MockServerControllerOptions;
        nodes?: MockServerNodeOptions[];
        onInit?: MockServerInitHook;
    };
}
export declare class MockServer {
    private options;
    constructor(options?: MockServerOptions);
    private serialport;
    private binding;
    private server;
    private mockController;
    private mockNodes;
    start(): Promise<void>;
    stop(): Promise<void>;
}
//# sourceMappingURL=mockServer.d.ts.map